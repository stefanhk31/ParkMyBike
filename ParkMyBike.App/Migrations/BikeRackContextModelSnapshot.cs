// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkMyBike.Data;

namespace ParkMyBike.Migrations
{
    [DbContext(typeof(BikeRackContext))]
    partial class BikeRackContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ParkMyBike.Data.Coordinates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.HasKey("Id");

                    b.ToTable("Coordinates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Latitude = 36.014081300000001,
                            Longitude = -83.956911899999994
                        });
                });

            modelBuilder.Entity("ParkMyBike.Data.Entities.BikeRack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoordinatesId");

                    b.Property<string>("LocationDescription");

                    b.Property<int>("NumberOfRacks");

                    b.Property<int>("RackType");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("BikeRacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoordinatesId = 1,
                            LocationDescription = "My Home",
                            NumberOfRacks = 1,
                            RackType = 3,
                            Status = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
